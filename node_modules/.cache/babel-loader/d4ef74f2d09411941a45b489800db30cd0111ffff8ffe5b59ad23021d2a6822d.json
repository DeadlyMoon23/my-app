{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React_project 2\\\\my-app\\\\src\\\\components\\\\sw-components\\\\item-lists.js\";\nimport SwapiService from \"../services/swapi-service\";\nimport { withData } from \"../hoc-helpers\";\nimport ItemList from \"../item-list\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  getAllPeople,\n  getAllStarships,\n  getAllPlanets\n} = new SwapiService();\nconst withChildFunction = (Wrapped, fn) => {\n  return props => {\n    return /*#__PURE__*/_jsxDEV(Wrapped, {\n      ...props,\n      children: fn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  };\n};\nconst renderNameAndGender = ({\n  name,\n  gender\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: [name, \", \\xA0\", gender]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 5\n}, this);\nconst renderNameAndModel = ({\n  name,\n  model\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: [name, \", \\xA0model: \", model]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 5\n}, this);\nconst renderNameAndPopulation = ({\n  name,\n  population\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: [name, \", \\xA0\", population, \" \", population !== 'unknown' ? 'people' : null]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 5\n}, this);\nconst PersonList = withData(_c = withChildFunction(ItemList, renderNameAndGender), getAllPeople);\n_c2 = PersonList;\nconst PlanetList = withData(_c3 = withChildFunction(ItemList, renderNameAndPopulation), getAllPlanets);\n_c4 = PlanetList;\nconst StarshipList = withData(_c5 = withChildFunction(ItemList, renderNameAndModel), getAllStarships);\n_c6 = StarshipList;\nexport { PersonList, PlanetList, StarshipList };\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PersonList$withData\");\n$RefreshReg$(_c2, \"PersonList\");\n$RefreshReg$(_c3, \"PlanetList$withData\");\n$RefreshReg$(_c4, \"PlanetList\");\n$RefreshReg$(_c5, \"StarshipList$withData\");\n$RefreshReg$(_c6, \"StarshipList\");","map":{"version":3,"names":["SwapiService","withData","ItemList","React","jsxDEV","_jsxDEV","getAllPeople","getAllStarships","getAllPlanets","withChildFunction","Wrapped","fn","props","children","fileName","_jsxFileName","lineNumber","columnNumber","renderNameAndGender","name","gender","renderNameAndModel","model","renderNameAndPopulation","population","PersonList","_c","_c2","PlanetList","_c3","_c4","StarshipList","_c5","_c6","$RefreshReg$"],"sources":["C:/Users/User/Desktop/React_project 2/my-app/src/components/sw-components/item-lists.js"],"sourcesContent":["import SwapiService from \"../services/swapi-service\";\r\nimport { withData } from \"../hoc-helpers\";\r\nimport ItemList from \"../item-list\";\r\nimport React from \"react\";\r\n\r\nconst {\r\n    getAllPeople,\r\n    getAllStarships,\r\n    getAllPlanets\r\n} = new SwapiService()\r\n\r\nconst withChildFunction = (Wrapped, fn) => {\r\n    return (props) => {\r\n        return (\r\n            <Wrapped { ...props }>\r\n                { fn }\r\n            </Wrapped>\r\n        )\r\n    }\r\n}\r\n\r\nconst renderNameAndGender = ({name, gender}) =>\r\n    <span>{name}, &nbsp;{gender}</span>\r\n\r\nconst renderNameAndModel = ({ name, model }) =>\r\n    <span>{name}, &nbsp;model: {model}</span>\r\n\r\nconst renderNameAndPopulation = ({ name, population }) =>\r\n    <span>{name}, &nbsp;{population} {population !== 'unknown' ? 'people' : null}</span>\r\n\r\nconst PersonList = withData(withChildFunction(ItemList, renderNameAndGender), getAllPeople)\r\n\r\nconst PlanetList = withData(withChildFunction(ItemList, renderNameAndPopulation), getAllPlanets)\r\n\r\nconst StarshipList = withData(withChildFunction(ItemList, renderNameAndModel), getAllStarships)\r\n\r\nexport {\r\n    PersonList,\r\n    PlanetList,\r\n    StarshipList\r\n}"],"mappings":";AAAA,OAAOA,YAAY,MAAM,2BAA2B;AACpD,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAM;EACFC,YAAY;EACZC,eAAe;EACfC;AACJ,CAAC,GAAG,IAAIR,YAAY,CAAC,CAAC;AAEtB,MAAMS,iBAAiB,GAAGA,CAACC,OAAO,EAAEC,EAAE,KAAK;EACvC,OAAQC,KAAK,IAAK;IACd,oBACIP,OAAA,CAACK,OAAO;MAAA,GAAME,KAAK;MAAAC,QAAA,EACbF;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAElB,CAAC;AACL,CAAC;AAED,MAAMC,mBAAmB,GAAGA,CAAC;EAACC,IAAI;EAAEC;AAAM,CAAC,kBACvCf,OAAA;EAAAQ,QAAA,GAAOM,IAAI,EAAC,QAAQ,EAACC,MAAM;AAAA;EAAAN,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAO,CAAC;AAEvC,MAAMI,kBAAkB,GAAGA,CAAC;EAAEF,IAAI;EAAEG;AAAM,CAAC,kBACvCjB,OAAA;EAAAQ,QAAA,GAAOM,IAAI,EAAC,eAAe,EAACG,KAAK;AAAA;EAAAR,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAO,CAAC;AAE7C,MAAMM,uBAAuB,GAAGA,CAAC;EAAEJ,IAAI;EAAEK;AAAW,CAAC,kBACjDnB,OAAA;EAAAQ,QAAA,GAAOM,IAAI,EAAC,QAAQ,EAACK,UAAU,EAAC,GAAC,EAACA,UAAU,KAAK,SAAS,GAAG,QAAQ,GAAG,IAAI;AAAA;EAAAV,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAO,CAAC;AAExF,MAAMQ,UAAU,GAAGxB,QAAQ,CAAAyB,EAAA,GAACjB,iBAAiB,CAACP,QAAQ,EAAEgB,mBAAmB,CAAC,EAAEZ,YAAY,CAAC;AAAAqB,GAAA,GAArFF,UAAU;AAEhB,MAAMG,UAAU,GAAG3B,QAAQ,CAAA4B,GAAA,GAACpB,iBAAiB,CAACP,QAAQ,EAAEqB,uBAAuB,CAAC,EAAEf,aAAa,CAAC;AAAAsB,GAAA,GAA1FF,UAAU;AAEhB,MAAMG,YAAY,GAAG9B,QAAQ,CAAA+B,GAAA,GAACvB,iBAAiB,CAACP,QAAQ,EAAEmB,kBAAkB,CAAC,EAAEd,eAAe,CAAC;AAAA0B,GAAA,GAAzFF,YAAY;AAElB,SACIN,UAAU,EACVG,UAAU,EACVG,YAAY;AACf,IAAAL,EAAA,EAAAC,GAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAE,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAJ,GAAA;AAAAI,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
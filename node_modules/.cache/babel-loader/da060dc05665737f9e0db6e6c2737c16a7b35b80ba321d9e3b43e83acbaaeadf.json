{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React_project 2\\\\my-app\\\\src\\\\components\\\\item-details\\\\item-details.js\";\nimport React, { Component } from 'react';\nimport './item-details.css';\nimport SwapiService from \"../services/swapi-service\";\nimport Spinner from \"../spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Record = ({\n  item,\n  field,\n  label\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"list-group-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"term\",\n      children: [label, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: item[field]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = Record;\nexport { Record };\nexport default class ItemDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.swapiService = new SwapiService();\n    this.state = {\n      item: null,\n      image: null,\n      loading: true\n    };\n    this.updateItem = () => {\n      const {\n        itemId,\n        getData,\n        getImageUrl\n      } = this.props;\n      if (!itemId) {\n        return;\n      }\n      getData(itemId).then(item => {\n        this.setState({\n          item,\n          image: getImageUrl(item),\n          loading: false\n        });\n      });\n    };\n  }\n  componentDidMount() {\n    this.updateItem();\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.itemId !== prevProps.itemId || this.props.getData !== prevProps.getData || this.props.getImageUrl !== prevProps.getImageUrl) {\n      this.updateItem();\n      this.setState({\n        loading: true\n      });\n    }\n  }\n  render() {\n    if (!this.state.item) return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Select a person from a list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 20\n    }, this);\n    const {\n      item,\n      image,\n      loading\n    } = this.state;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 35\n    }, this) : null;\n    const content = !loading ? /*#__PURE__*/_jsxDEV(ItemDetailsView, {\n      item: item,\n      image: image,\n      context: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 36\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"person-details card\",\n      children: [spinner, content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst ItemDetailsView = ({\n  item,\n  image,\n  context\n}) => {\n  const {\n    name\n  } = item;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"person-image\",\n      alt: \"person image\",\n      src: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group list-group-flush\",\n        children: React.Children.map(context, child => {\n          return /*#__PURE__*/React.cloneElement(child, {\n            item\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_c2 = ItemDetailsView;\nvar _c, _c2;\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"ItemDetailsView\");","map":{"version":3,"names":["React","Component","SwapiService","Spinner","jsxDEV","_jsxDEV","Record","item","field","label","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ItemDetails","constructor","args","swapiService","state","image","loading","updateItem","itemId","getData","getImageUrl","props","then","setState","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","spinner","content","ItemDetailsView","context","name","Fragment","alt","src","Children","map","child","cloneElement","_c2","$RefreshReg$"],"sources":["C:/Users/User/Desktop/React_project 2/my-app/src/components/item-details/item-details.js"],"sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport './item-details.css';\r\nimport SwapiService from \"../services/swapi-service\"\r\nimport Spinner from \"../spinner\"\r\n\r\nconst Record = ({ item, field, label }) => {\r\n    return (\r\n        <li className=\"list-group-item\">\r\n            <span className=\"term\">{ label }:</span>\r\n            <span>{ item[field] }</span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport {\r\n    Record\r\n}\r\n\r\nexport default class ItemDetails extends Component {\r\n\r\n    swapiService = new SwapiService()\r\n\r\n    state = {\r\n        item: null,\r\n        image: null,\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItem()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.itemId !== prevProps.itemId ||\r\n            this.props.getData !== prevProps.getData ||\r\n            this.props.getImageUrl !== prevProps.getImageUrl) {\r\n            this.updateItem()\r\n            this.setState({ loading: true })\r\n        }\r\n    }\r\n\r\n    updateItem = () => {\r\n        const { itemId, getData, getImageUrl } = this.props\r\n        if (!itemId) {\r\n            return\r\n        }\r\n\r\n        getData(itemId)\r\n            .then((item) => {\r\n                this.setState({\r\n                    item,\r\n                    image: getImageUrl(item),\r\n                    loading: false\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.item)\r\n            return <span>Select a person from a list</span>\r\n\r\n        const { item, image, loading } = this.state\r\n\r\n        const spinner = loading ? <Spinner /> : null\r\n\r\n        const content = !loading ? <ItemDetailsView item={item} image={image} context={this.props.children}/> : null\r\n\r\n        return (\r\n            <div className=\"person-details card\">\r\n                { spinner }\r\n                { content }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ItemDetailsView = ({ item, image, context }) => {\r\n\r\n    const { name } = item\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <img className=\"person-image\" alt=\"person image\"\r\n                 src={ image } />\r\n\r\n            <div className=\"card-body\">\r\n                <h4>{ name }</h4>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    {\r\n                        React.Children.map(context, (child) => {\r\n                            return React.cloneElement(child, { item })\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.dev/api';\n    this._transformPlanet = planet => {\n      return {\n        id: this._extractId(planet),\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      };\n    };\n    this._transformStarship = starship => {\n      return {\n        id: this._extractId(starship),\n        name: starship.name,\n        model: starship.model,\n        manufacturer: starship.manufacturer,\n        costInCredits: starship.cost_in_credits,\n        length: starship.length,\n        crew: starship.crew,\n        passengers: starship.passengers,\n        cargoCapacity: starship.cargo_capacity\n      };\n    };\n    this._transformPerson = person => {\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        gender: person.gender,\n        birthYear: person.birth_year,\n        eyeColor: person.eye_color\n      };\n    };\n  }\n  async getResource(url) {\n    const res = await fetch(`${this._apiBase}${url}`);\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}` + `, received ${res.status}`);\n    }\n    return await res.json();\n  }\n  async getAllPeople() {\n    const res = await this.getResource(`/people/`);\n    return res.results.map(this._transformPerson);\n  }\n  async getPerson(id) {\n    const person = await this.getResource(`/people/${id}/`);\n    return this._transformPerson(person);\n  }\n  async getAllPlanets() {\n    const res = await this.getResource(`/planets/`);\n    return res.results.map(this._transformPlanet);\n  }\n  async getPlanet(id) {\n    const planet = await this.getResource(`/planets/${id}/`);\n    return this._transformPlanet(planet);\n  }\n  async getAllStarships() {\n    const res = await this.getResource(`/starships/`);\n    return res.results.map(this._transformStarship);\n  }\n  async getStarship(id) {\n    const starship = this.getResource(`/starships/${id}/`);\n    return this._transformStarship(starship);\n  }\n  _extractId(item) {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  }\n}","map":{"version":3,"names":["SwapiService","constructor","_apiBase","_transformPlanet","planet","id","_extractId","name","population","rotationPeriod","rotation_period","diameter","_transformStarship","starship","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","_transformPerson","person","gender","birthYear","birth_year","eyeColor","eye_color","getResource","url","res","fetch","ok","Error","status","json","getAllPeople","results","map","getPerson","getAllPlanets","getPlanet","getAllStarships","getStarship","item","idRegExp","match"],"sources":["C:/Users/User/Desktop/React_project 2/my-app/src/components/services/swapi-service.js"],"sourcesContent":["export default class SwapiService {\r\n\r\n    _apiBase = 'https://swapi.dev/api';\r\n  \r\n    async getResource(url) {\r\n      const res = await fetch(`${this._apiBase}${url}`);\r\n  \r\n      if (!res.ok) {\r\n        throw new Error(`Could not fetch ${url}` +\r\n          `, received ${res.status}`)\r\n      }\r\n      return await res.json();\r\n    }\r\n  \r\n    async getAllPeople() {\r\n      const res = await this.getResource(`/people/`);\r\n      return res.results.map(this._transformPerson);\r\n    }\r\n  \r\n    async getPerson(id) {\r\n      const person = await this.getResource(`/people/${id}/`);\r\n      return this._transformPerson(person);\r\n    }\r\n  \r\n    async getAllPlanets() {\r\n      const res = await this.getResource(`/planets/`);\r\n      return res.results.map(this._transformPlanet);\r\n    }\r\n  \r\n    async getPlanet(id) {\r\n      const planet = await this.getResource(`/planets/${id}/`);\r\n      return this._transformPlanet(planet);\r\n    }\r\n  \r\n    async getAllStarships() {\r\n      const res = await this.getResource(`/starships/`);\r\n      return res.results.map(this._transformStarship);\r\n    }\r\n  \r\n    async getStarship(id) {\r\n      const starship = this.getResource(`/starships/${id}/`);\r\n      return this._transformStarship(starship);\r\n    }\r\n  \r\n    _extractId(item) {\r\n      const idRegExp = /\\/([0-9]*)\\/$/;\r\n      return item.url.match(idRegExp)[1];\r\n    }\r\n  \r\n    _transformPlanet = (planet) => {\r\n      return {\r\n        id: this._extractId(planet),\r\n        name: planet.name,\r\n        population: planet.population,\r\n        rotationPeriod: planet.rotation_period,\r\n        diameter: planet.diameter\r\n      };\r\n    }\r\n  \r\n    _transformStarship = (starship) => {\r\n      return {\r\n        id: this._extractId(starship),\r\n        name: starship.name,\r\n        model: starship.model,\r\n        manufacturer: starship.manufacturer,\r\n        costInCredits: starship.cost_in_credits,\r\n        length: starship.length,\r\n        crew: starship.crew,\r\n        passengers: starship.passengers,\r\n        cargoCapacity: starship.cargo_capacity\r\n      }\r\n    }\r\n  \r\n    _transformPerson = (person) => {\r\n      return {\r\n        id: this._extractId(person),\r\n        name: person.name,\r\n        gender: person.gender,\r\n        birthYear: person.birth_year,\r\n        eyeColor: person.eye_color\r\n      }\r\n    }\r\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React_project 2\\\\my-app\\\\src\\\\components\\\\random-planet\\\\random-planet.js\";\nimport React, { Component } from 'react';\nimport Spinner from '../spinner';\nimport SwapiService from '../../services/swapi-service';\nimport ErrorIndicator from \"../error-indicator\";\nimport './random-planet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RandomPlanet extends Component {\n  constructor(...args) {\n    super(...args);\n    this.swapiService = new SwapiService();\n    this.state = {\n      planet: {},\n      loading: true,\n      error: false\n    };\n    this.onPlanetLoaded = planet => {\n      this.setState({\n        planet,\n        loading: false\n      });\n    };\n    this.onError = err => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n    this.updatePlanet = () => {\n      let id = 20;\n      while (id === 20) {\n        id = Math.floor(Math.random() * 19) + 3;\n      }\n      this.swapiService.getPlanet(id).then(this.onPlanetLoaded).catch(err => this.onError());\n    };\n  }\n  componentDidMount() {\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, 3000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    const {\n      planet,\n      loading,\n      error\n    } = this.state;\n    const hasData = !(loading || error);\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 35\n    }, this) : null;\n    const content = hasData ? /*#__PURE__*/_jsxDEV(PlanetView, {\n      planet: planet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 35\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random-planet jumbotron rounded\",\n      children: [errorMessage, spinner, content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst PlanetView = ({\n  planet\n}) => {\n  const {\n    id,\n    name,\n    population,\n    rotationPeriod,\n    diameter\n  } = planet;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"planet-image\",\n      src: `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`,\n      alt: 'Planet'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group list-group-flush\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"term\",\n            children: \"Population\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: population\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"term\",\n            children: \"Rotation Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: rotationPeriod\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"term\",\n            children: \"Diameter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: diameter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_c = PlanetView;\nvar _c;\n$RefreshReg$(_c, \"PlanetView\");","map":{"version":3,"names":["React","Component","Spinner","SwapiService","ErrorIndicator","jsxDEV","_jsxDEV","RandomPlanet","constructor","args","swapiService","state","planet","loading","error","onPlanetLoaded","setState","onError","err","updatePlanet","id","Math","floor","random","getPlanet","then","catch","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","hasData","errorMessage","fileName","_jsxFileName","lineNumber","columnNumber","spinner","content","PlanetView","className","children","name","population","rotationPeriod","diameter","Fragment","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/React_project 2/my-app/src/components/random-planet/random-planet.js"],"sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport Spinner from '../spinner'\r\nimport SwapiService from '../../services/swapi-service'\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nimport './random-planet.css'\r\n\r\nexport default class RandomPlanet extends Component {\r\n\r\n    swapiService = new SwapiService()\r\n\r\n    state = {\r\n        planet: {},\r\n        loading: true,\r\n        error: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updatePlanet()\r\n        this.interval = setInterval(this.updatePlanet, 3000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    onPlanetLoaded = (planet) => {\r\n        this.setState({\r\n            planet,\r\n            loading: false\r\n        });\r\n    };\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        });\r\n    }\r\n\r\n    updatePlanet = () => {\r\n        let id = 20;\r\n        while (id === 20 ) {\r\n            id = Math.floor(Math.random()*19) + 3\r\n        }\r\n        this.swapiService\r\n            .getPlanet(id)\r\n            .then(this.onPlanetLoaded)\r\n            .catch((err) => this.onError())\r\n    }\r\n\r\n    render() {\r\n        const { planet, loading, error } = this.state\r\n\r\n        const hasData = !(loading || error)\r\n\r\n        const errorMessage = error ? <ErrorIndicator /> : null\r\n        const spinner = loading ? <Spinner /> : null\r\n        const content = hasData ? <PlanetView planet={planet}/> : null\r\n\r\n        return (\r\n            <div className=\"random-planet jumbotron rounded\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst PlanetView = ({ planet }) => {\r\n\r\n    const { id, name, population, rotationPeriod, diameter } = planet\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <img className=\"planet-image\"\r\n                 src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}  alt={'Planet'}/>\r\n            <div>\r\n                <h4>{name}</h4>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"term\">Population</span>\r\n                        <span>{population}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"term\">Rotation Period</span>\r\n                        <span>{rotationPeriod}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"term\">Diameter</span>\r\n                        <span>{diameter}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}